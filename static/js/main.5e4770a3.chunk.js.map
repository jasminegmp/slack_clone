{"version":3,"sources":["config.js","component/App.js","Firebase.js","component/auth/Login.js","component/auth/Register.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","react_default","a","createElement","className","require","default","firebaseConfig","firebase","initializeApp","Login","state","email","password","error","loading","displayError","message","handleChange","event","_this","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","isFormValid","auth","signInWithEmailAndPassword","then","signedInUser","console","log","catch","err","_ref","_this$state","this","Grid","textAlign","verticalAlign","Column","style","maxWidth","Header","as","icon","color","Icon","Form","onSubmit","size","Segment","stacked","Input","fluid","iconPosition","placeholder","onChange","type","Button","disabled","Message","react_router_dom","to","React","Component","Register","username","passwordConfirmation","usersRef","database","ref","isFormEmpty","isPasswordValid","length","_ref2","createUserWithEmailAndPassword","createdUser","hash","md5","user","updateProfile","displayName","photoURL","concat","saveUser","child","uid","set","avatar","Root","onAuthStateChanged","props","history","push","react_router","exact","path","process","component","RootWithAuth","withRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e4770a3.chunk.js","sourcesContent":["var config = {\n    apiKey: \"AIzaSyC6eaATGVvdB4lrWGKRnVrMaAkoqSSh0t8\",\n    authDomain: \"slack-clone-c87e6.firebaseapp.com\",\n    databaseURL: \"https://slack-clone-c87e6.firebaseio.com\",\n    projectId: \"slack-clone-c87e6\",\n    storageBucket: \"slack-clone-c87e6.appspot.com\",\n    messagingSenderId: \"681566378181\",\n    appId: \"1:681566378181:web:c578bcd626b59a4a\"\n  };\n\nexport default config;","import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        Hi\n    </div>\n  );\n}\n\nexport default App;\n","import firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nconst config = require('./config').default;\n\nvar firebaseConfig = {\n    apiKey: config.apiKey,\n    authDomain: config.authDomain,\n    databaseURL: config.databaseURL,\n    projectId: config.projectId,\n    storageBucket: config.storageBucket,\n    messagingSenderId: config.messagingSenderId,\n    appId: config.appId,\n  };\n\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React from 'react';\nimport {Grid, Form, Segment, Header, Button, Message, Icon} from 'semantic-ui-react';\nimport {Link} from 'react-router-dom';\nimport firebase from '../../Firebase';\n\nclass Login extends React.Component{\n\n    state = {\n        email: '',\n        password: '',\n        error: '',\n        loading: false,\n    };\n\n    displayError = (error) => {\n        return <p>{error.message}</p>\n    } \n\n    handleChange = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.isFormValid(this.state)){\n            this.setState({error: '', loading: true});\n            firebase\n                .auth()\n                .signInWithEmailAndPassword(this.state.email, this.state.password)\n                .then(signedInUser => {\n                    console.log(\"logged in: \", signedInUser);\n                })\n                .catch(err => {\n                    this.setState({\n                        error: err,\n                        loading: false\n                    })\n                });\n        }\n\n\n    }\n\n    isFormValid = ({email, password}) => email && password;\n    \n\n    render(){\n        const {email, password, error, loading} = this.state;\n        return (\n            <Grid textAlign = \"center\" verticalAlign = \"middle\" className = \"app\">\n                <Grid.Column style = {{maxWidth: 450}}>\n                    <Header as=\"h2\" icon color = \"pink\" textAlign = \"center\">\n                        <Icon name = \"talk\" color = \"pink\" />\n                        Login to  GumpChat\n                    </Header>\n                    <Form onSubmit = {this.handleSubmit} size = \"large\">\n                        <Segment stacked>\n                            <Form.Input fluid name = \"email\" \n                                        icon = \"mail\" \n                                        iconPosition =\"left\" \n                                        placeholder=\"Email Address\" \n                                        onChange = {this.handleChange}\n                                        type = \"email\"\n                                        value = {email}\n                            />\n                            <Form.Input fluid name = \"password\" \n                                        icon = \"lock\" \n                                        iconPosition =\"left\" \n                                        placeholder=\"Password\" \n                                        onChange = {this.handleChange}\n                                        type = \"password\"\n                                        value = {password}\n                            />\n                            <Button className = {loading ? 'loading': ''} disabled = {loading} color = \"pink\" fluid size =\"large\">Submit</Button>\n                        </Segment>\n                    </Form>\n                    {(error && \n                        (<Message error>\n                            <h3>Error</h3>\n                            {this.displayError(error)}\n                        </Message>)\n                    )}\n                    \n                    <Message>Don't have an account?<Link to = \"/register\"> Register</Link></Message>\n\n                </Grid.Column>\n\n            </Grid>\n        )\n    }\n}\n\nexport default Login;","import React from 'react';\nimport {Grid, Form, Segment, Header, Button, Message, Icon} from 'semantic-ui-react';\nimport {Link} from 'react-router-dom';\nimport firebase from '../../Firebase';\nimport md5 from 'md5';\n\nclass Register extends React.Component{\n\n    state = {\n        username: '',\n        email: '',\n        password: '',\n        passwordConfirmation: '',\n        error: '',\n        loading: false,\n        usersRef: firebase.database().ref('users')\n    };\n\n    isFormValid = () => {\n        if (this.isFormEmpty(this.state)){\n            // throw error\n            const currentError = {message: 'Fill in all fields'};\n            this.setState({error: currentError});\n            return false;\n        }\n        else if (!this.isPasswordValid(this.state)){\n            // throw error\n            const currentError = {message: 'Password Invalid'};\n            this.setState({error: currentError});\n            return false;\n        }\n        else{\n            return true;\n            // form value, return trun\n        }\n    }\n\n    isFormEmpty = ({username, email, password, passwordConfirmation}) => {\n        return !username.length || !email.length || !password.length || !passwordConfirmation.length;\n    }\n\n    isPasswordValid = ({password, passwordConfirmation}) => {\n        if (password.length < 6 || passwordConfirmation.length < 6){\n            return false;\n        }\n        else if (password !== passwordConfirmation){\n            return false;\n        }\n        else{\n            return true;\n        }\n    }\n\n    displayError = (error) => {\n        return <p>{error.message}</p>\n    } \n\n    handleChange = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.isFormValid(this.state)){\n            this.setState({error: '', loading: true});\n            firebase\n                .auth()\n                .createUserWithEmailAndPassword(this.state.email, this.state.password)\n                .then(createdUser => {\n                    console.log(createdUser) ;\n                    const hash = md5(createdUser.user.email);\n                    createdUser.user.updateProfile({\n                        displayName: this.state.username,\n                        photoURL: `http://gravatar.com/avatar/${hash}?d=identicon`\n                    })\n                    .then(() => {\n                        this.saveUser(createdUser).then(() => {\n                            console.log(\"User saved.\");\n                        })\n                        this.setState({loading: false});  \n                        \n                    })\n                    .catch (err => {\n                        console.error(err);\n                        this.setState({error: err, loading: false});\n                    })\n                     \n                })\n                .catch(err => {\n                    console.error(err);\n                    this.setState({error: err, loading: false});\n                })    \n        }\n\n\n    }\n\n    saveUser = (createdUser) => {\n        return this.state.usersRef.child(createdUser.user.uid).set({\n            name: createdUser.user.displayName,\n            avatar: createdUser.user.photoURL,\n        })\n    }\n\n    render(){\n        const {username, email, password, passwordConfirmation, error, loading} = this.state;\n        return (\n            <Grid textAlign = \"center\" verticalAlign = \"middle\" className = \"app\">\n                <Grid.Column style = {{maxWidth: 450}}>\n                    <Header as=\"h2\" icon color = \"blue\" textAlign = \"center\">\n                        <Icon name = \"talk\" color = \"blue\" />\n                        Register for GumpChat\n                    </Header>\n                    <Form onSubmit = {this.handleSubmit} size = \"large\">\n                        <Segment stacked>\n                            <Form.Input fluid name = \"username\" \n                                        icon = \"user\" \n                                        iconPosition =\"left\" \n                                        placeholder=\"Username\" \n                                        onChange = {this.handleChange}\n                                        type = \"text\"\n                                        value = {username}\n                            />\n                            <Form.Input fluid name = \"email\" \n                                        icon = \"mail\" \n                                        iconPosition =\"left\" \n                                        placeholder=\"Email Address\" \n                                        onChange = {this.handleChange}\n                                        type = \"email\"\n                                        value = {email}\n                            />\n                            <Form.Input fluid name = \"password\" \n                                        icon = \"lock\" \n                                        iconPosition =\"left\" \n                                        placeholder=\"Password\" \n                                        onChange = {this.handleChange}\n                                        type = \"password\"\n                                        value = {password}\n                            />\n                            <Form.Input fluid name = \"passwordConfirmation\" \n                                        icon = \"lock\" \n                                        iconPosition =\"left\" \n                                        placeholder=\"Password Confirmation\" \n                                        onChange = {this.handleChange}\n                                        type = \"password\"\n                                        value = {passwordConfirmation}\n                            />\n                            <Button className = {loading ? 'loading': ''} disabled = {loading} color = \"blue\" fluid size =\"large\">Submit</Button>\n                        </Segment>\n                    </Form>\n                    {(error && \n                        (<Message error>\n                            <h3>Error</h3>\n                            {this.displayError(error)}\n                        </Message>)\n                    )}\n                    \n                    <Message>Already a user? <Link to = \"/login\">Login</Link></Message>\n\n                </Grid.Column>\n\n            </Grid>\n        )\n    }\n}\n\nexport default Register;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport Login from './component/auth/Login';\nimport Register from './component/auth/Register';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport 'semantic-ui-css/semantic.min.css';\nimport firebase from './Firebase';\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\n\nclass Root extends React.Component{\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged(user => {\n            if (user){\n                //console.log(user);\n                this.props.history.push('/');\n            }\n        })\n    }\n    render(){\n        return (\n            <Switch>\n                <Route exact path = {`${process.env.PUBLIC_URL}/`} component = {App} />\n                <Route path = {`${process.env.PUBLIC_URL}/login`}component = {Login} />\n                <Route path = {`${process.env.PUBLIC_URL}/register`} component = {Register} />\n            </Switch>\n        )\n    }\n}\n\nconst RootWithAuth = withRouter(Root);\n\nReactDOM.render(\n    <Router>\n        <RootWithAuth />\n    </Router>\n, \ndocument.getElementById('root'));\n\n"],"sourceRoot":""}